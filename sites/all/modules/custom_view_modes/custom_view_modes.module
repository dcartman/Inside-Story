<?php
function content_view_modes_help($path, $arg) {
    switch ($path) {
    case "admin/help#media_view_modes":
        return '<p>'. t("Creates Additional content view modes") .'</p>';
        break;
    }
}
 
function content_view_modes_theme() {
    return array(
                 'content_view_modes_javascript' => array(
                                                   'arguments' => array(),
                                                   ),
                 );   
}


//Add more view modes for Media formatting. 
function content_view_modes_entity_info_alter(&$entity_info) {

  //Not sure if it's still an issue, but a previous commenter noted that Media module only recognizes view modes with the prefix media_. Also, as you can see by the entity type 'file', this is for after the switch-to-file-entity patch.
  $entity_info['file']['view modes']['media_cast_profile'] = array(
    'label' => t('Cast Profile'),
    'custom settings' => TRUE,
  );
  
  $entity_info['node']['view modes']['cast_profile'] = array(
  	'label' => t('Cast Profile'),
  	'custom settings' => TRUE
  );
  
  $entity_info['file']['view modes']['media_filmmaker_profile'] = array(
    'label' => t('Filmmaker Profile'),
    'custom settings' => TRUE,
  );
  
  $entity_info['node']['view modes']['filmmaker_profile'] = array(
  	'label' => t('Filmmaker Profile'),
  	'custom settings' => TRUE
  );
 
}

/**
* Implements hook_preprocess_node().
*/
function content_view_modes_preprocess_node(&$vars) {
  if($vars['view_mode'] == 'teaser') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__teaser';
  }
  
  if($vars['view_mode'] == 'filmmaker_profile') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__filmmaker_profile';
  }
  
  if($vars['view_mode'] == 'cast_profile') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__cast_profile';
  }
}
